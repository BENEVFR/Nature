---
title: ""
format:
  html:
    self-contained: true
    toc: true
    toc-expand: 2
    toc-title: Naviguer dans le rapport
    theme: 
      - flatly
      - custom.scss
    include-in-header:
      text: |
        <script src="https://cdn.jsdelivr.net/npm/treeselectjs@0.10.0/dist/treeselectjs.umd.js"></script>
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/treeselectjs@0.10.0/dist/treeselectjs.css" />
        <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin=""/>
        <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js" integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=" crossorigin=""></script>
        <script src="https://unpkg.com/leaflet-providers@latest/leaflet-providers.js"></script>
        <script type="text/javascript" src="geodata_hex.js"></script>
        <script type="text/javascript" src="geodata_city.js"></script>
        <script type="text/javascript" src="utils.js"></script>
        <script type="text/javascript" src="map.js"></script>
        <script type="text/javascript" src="treeSelect.js"></script>
execute:
  echo: false
---

```{r}
city <- "Verneuil-sur-seine"
```

```{r}
#| out.width: "100%"
#| fig.align: "center"
knitr::include_graphics(system.file("templates", "infographie", "logo_bleu.svg", package = "nature"))
```

:::: {#logo layout="[25, 65]"}

<!--Si tu souhaites ajouter plus d'espace pour ton logo, tu peux modifier les valeurs du paramètre `layout` dans le chunk ci-dessus.-->
<!--+ d'infos ici : https://quarto.org/docs/computations/execution-options.html-->

```{r}
#| out.width: "40%"
#| fig.align: "center"
knitr::include_graphics("images/Logo_de_Verneuil-sur-Seine.png")
```

Rapport sur l'étude de la ville de `r city`
::::

# Bien-être et végétalisation

```{r}
#| message: false
#| warning: false

library(dplyr)
library(shiny)
library(ggplot2)
library(DT)
library(ggtext)
library(showtext)
library(psych)
library(papaja)
library(gtsummary)
library(NCA)
library(nature)
library(patchwork)
library(glue)
library(gridExtra)



font_add_google("Mulish")
font_add_google("Montserrat")
showtext_auto()

# Ne pas supprimer car permet de charger les dépendances à DT
DT::datatable(data.frame())
```

<!--Modifier le chemin pour lire les données de la ville-->

```{r}
# Calculer les données pour la ville
dataset <- readxl::read_excel("data/verneuil_data.xlsx") |>
  calculate_indicators() |> 
  clean_indicators() 
 
## Calculer les données nationales en comparaison
datanat <- donnees_nat |>
  calculate_indicators() |> 
  select(-AGE, -REVENUFOYER)
  

# Création d'un tableau plus large
full_data <- dataset |>
  mutate(
    place = "Local"
  ) |> 
  bind_rows(
    datanat |> 
      mutate(
        place = "National"
      )
  )
```


## Présentation et analyse

### Introduction

Le projet BENEV vise à identifier les zones prioritaires de revégétalisation dans la ville de `r city`. Pour se faire, nous étudions la perception de nature et son incidence sur le bien-être des résidents en ville. Ce rapport présente les analyses effectuées à partir des données collectées auprès des habitants de `r city`.

### Analyse du profil des répondants

**`r nrow(dataset)` citoyens** résidant en ville ont complétés le questionnaire entre le 1er octobre et le 20 décembre 2024. Voici leurs statistiques descriptives.


```{r}
#| output: asis
# Graphique pour Sexe des répondants
table_sexe <- dataset |> 
  group_by(SEXE) |> 
  summarise(
    Fréquence = n(),
    Pourcentage = round((n() / nrow(dataset)) * 100, 2)
  )

plot_sexe <- ggplot(table_sexe, aes(x = "", y = Pourcentage, fill = SEXE)) +
  geom_col(color = "black") +
  geom_label(aes(label = Pourcentage), color = "#C12C6D",
             position = position_stack(vjust = 0.5),
             show.legend = FALSE,
             size= 3) +
  guides(fill = guide_legend(title = "Sexe")) +
  scale_fill_manual(values = c("#8DABDD", "#ECBFD3", "#c5b3e6")) +  # Couleurs personnalisées
  coord_polar(theta = "y") +
  theme_void() +
  ggtitle("Sexe des répondants") +
  theme(
      plot.title = element_text(
      family = "Montserrat",           # Change la famille de police (exemple: sans-serif)
      face = "bold",             # Met le titre en gras
      size = 10,                 # Augmente la taille du titre
      margin = margin(b = 20),   # Espace supplémentaire en bas du titre
      color = "#1C57BC"        # Couleur du texte du titre
    ),
    plot.margin = margin(10, 10, 10, 10)
  )

# Graphique pour Age des répondants
table_age <- dataset |> 
  group_by(AGE) |> 
  summarise(
    Fréquence = n(),
    Pourcentage = round((n() / nrow(dataset)) * 100, 2)
  )

plot_age <- ggplot(table_age, aes(x = "", y = Pourcentage, fill = AGE)) +
  geom_col(color = "black") +
  geom_label(aes(label = Pourcentage), color = "#C12C6D",
             position = position_stack(vjust = 0.5),
             show.legend = FALSE,
             size= 3) +
  guides(fill = guide_legend(title = "Age")) +
  scale_fill_benev(name_palette = "blue", 9) +  # Couleurs personnalisées
  coord_polar(theta = "y") +
  theme_void() +
  ggtitle("Age des répondants") +
  theme(
      plot.title = element_text(
      family = "Montserrat",           # Change la famille de police (exemple: sans-serif)
      face = "bold",             # Met le titre en gras
      size = 10,                 # Augmente la taille du titre
      margin = margin(b = 20),   # Espace supplémentaire en bas du titre
      color = "#1C57BC"        # Couleur du texte du titre
    ),
    plot.margin = margin(10, 10, 10, 10)
  )


# Graphique pour Situation civile
table_sitciv <- dataset |> 
  group_by(SITCIVILE) |> 
  summarise(
    Fréquence = n(),
    Pourcentage = round((n() / nrow(dataset)) * 100, 2)
  )

plot_sitciv <- ggplot(table_sitciv, aes(x = "", y = Pourcentage, fill = SITCIVILE)) +
  geom_col(color = "black") +
  geom_label(aes(label = Pourcentage), color ="#0e2b5e",
             position = position_stack(vjust = 0.5),
             show.legend = FALSE,
             size= 3) +
  guides(fill = guide_legend(title = "Situation civile")) +
  scale_fill_benev(name_palette = "pink", 9) +  # Couleurs personnalisées
  coord_polar(theta = "y") +
  theme_void() +
  ggtitle("Situation civile des répondants") +
  theme(
      plot.title = element_text(
      family = "Montserrat",           # Change la famille de police (exemple: sans-serif)
      face = "bold",             # Met le titre en gras
      size = 10,                 # Augmente la taille du titre
      margin = margin(b = 20),   # Espace supplémentaire en bas du titre
      color = "#1C57BC"        # Couleur du texte du titre
    ),
    plot.margin = margin(10, 10, 10, 10)
  )


# Graphique pour Nombre d'enfant
table_nbenfant <- dataset |> 
  group_by(NBENFANT) |> 
  summarise(
    Fréquence = n(),
    Pourcentage = round((n() / nrow(dataset)) * 100, 2)
  )


plot_nbenfant <- ggplot(table_nbenfant, aes(x = "", y = Pourcentage, fill =NBENFANT)) +
  geom_col(color = "black") +
  geom_label(aes(label = Pourcentage), color ="#0e2b5e",
             position = position_stack(vjust = 0.5),
             show.legend = FALSE,
             size= 3) +
  guides(fill = guide_legend(title = "Nombre d'enfant")) +
  scale_fill_manual(values = c("#8DABDD", "#ECBFD3", "#c5b3e6", "#769ad6","#e685b5")) +  # Couleurs personnalisées
  coord_polar(theta = "y") +
  theme_void() +
  ggtitle("Nombre d'enfant des répondants") +
  theme(
      plot.title = element_text(
      family = "Montserrat",           # Change la famille de police (exemple: sans-serif)
      face = "bold",             # Met le titre en gras
      size = 10,                 # Augmente la taille du titre
      margin = margin(b = 20),   # Espace supplémentaire en bas du titre
      color = "#1C57BC"        # Couleur du texte du titre
    ),
    plot.margin = margin(10, 10, 10, 10)
  )

# Répéter ce modèle pour chaque variable (NIVETUDE, REVENUFOYER, SITCIVILE, SITPRO, TYPEHABITAT, NBPERSFOYER, NBENFANT)
# Exemple pour Niveau d'études des répondants

# Calcul de la table de fréquences pour la variable NIVETUDE
table_nivetude <- dataset |> 
  group_by(NIVETUDE) |> 
  summarise(
    Fréquence = n(),
    Pourcentage = round((n() / nrow(dataset)) * 100, 2)
  )

# Création de l'histogramme pour la variable NIVETUDE
plot_nivetude <- ggplot(table_nivetude, aes(x = NIVETUDE, y = Fréquence, fill = NIVETUDE)) +
  geom_bar(stat = "identity", color = "black") +
  geom_text(aes(label = paste0(Pourcentage, "%")), vjust = -0.5, color ="#C12C6D", size = 4) +
  guides(fill = guide_legend(title = "Niveau d'études")) +
  scale_fill_benev(name_palette = "purle", 9) +  # Couleurs personnalisées
  theme_minimal() +
  ggtitle("Niveau d'études des répondants") +
  xlab("") +
  ylim(0, max(table_nivetude$Fréquence) * 1.1) +
  theme(
      plot.title = element_text(
      family = "Montserrat",           # Change la famille de police (exemple: sans-serif)
      face = "bold",             # Met le titre en gras
      size = 10,                 # Augmente la taille du titre
      margin = margin(b = 20),   # Espace supplémentaire en bas du titre
      color = "#1C57BC"        # Couleur du texte du titre
    ),
    plot.margin = margin(10, 10, 10, 10),
    axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1)  # Inclinaison des titres de colonnes
  )

# Calcul de la table de fréquences pour la variable TYPEHABITAT
table_typehabitat <- dataset |> 
   filter(!is.na(TYPEHABITAT)) |> 
  group_by(TYPEHABITAT) |> 
  summarise(
    Fréquence = n(),
    Pourcentage = round((n() / nrow(dataset)) * 100, 2)
  )

# Création de l'histogramme pour la variable TYPEHABITAT
plot_typehabitat <- ggplot(table_typehabitat, aes(x = TYPEHABITAT, y = Fréquence, fill = TYPEHABITAT)) +
  geom_bar(stat = "identity", color = "black") +
  geom_text(aes(label = paste0(Pourcentage, "%")), vjust = -0.5, color ="#C12C6D", size = 4) +
  guides(fill = guide_legend(title = "Type d'habitation")) +
  scale_fill_benev(name_palette = "green", 9) +  # Couleurs personnalisées
  theme_minimal() +
  ggtitle("Type d'habitation des répondants") +
  xlab("") +
  ylim(0, max(table_typehabitat$Fréquence, na.rm = TRUE) * 1.1) +
  theme(
      plot.title = element_text(
      family = "Montserrat",           # Change la famille de police (exemple: sans-serif)
      face = "bold",             # Met le titre en gras
      size = 10,                 # Augmente la taille du titre
      margin = margin(b = 20),   # Espace supplémentaire en bas du titre
      color = "#1C57BC"        # Couleur du texte du titre
    ),
    plot.margin = margin(10, 10, 10, 10),
    axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1)  # Inclinaison des titres de colonnes
  )


# Affichage des graphiques
grid.arrange(plot_sexe, plot_age, plot_sitciv, plot_nbenfant, ncol = 2, nrow = 2)
plot_nivetude
plot_typehabitat

```


### Niveau de bien-être et perception de nature en fonction des caractéristiques de la population

Le tableau ci-dessous présente les niveaux de bien-etre et de perception de nature en fonction des caractéristiques des résidents. Nous étudions également l'existence de différences significatives en fonction de ces caractéristiques ainsi que les différences avec notre échantillon nationale.

```{r, dev.args=list(bg="transparent")}
#| fig-align: center
#| 
# dataset %>% 
#   group_by(SEXE) %>% 
#   summarise(
#     note_critere_bien_etre = round(mean(critere_bien_etre_global), 2)
#   ) %>% 
#   ggplot() +
#   aes(x = SEXE, y = note_critere_bien_etre, fill = SEXE) +
#   geom_col() +
#   theme_benev() +
#   scale_fill_benev() +
#   ylim(0, 5) +
#   labs(
#     x = "",
#     y = "Note moyenne de bien-être"
#   ) +
#   theme(legend.position = "none")

# A basic scatterplot with color depending on SEXE
ggplot(dataset, aes(x=critere_type_nature_global, y=critere_bien_etre_global, color=SEXE)) + 
    geom_point() +
    theme_benev() + 
  scale_color_benev("primaire",3)
```

## Analyse approfondie

```{r}
full_data_h <- full_data |> 
  filter(SEXE == "Homme")
full_data_f <- full_data |> 
  filter(SEXE == "Femme")

ttest_h <- t.test(critere_bien_etre_global ~ place, data = full_data_h) |> 
  broom::tidy() |> 
  mutate(
    SEXE = "Homme"
  ) |> 
  select(SEXE, estimate, p.value)

ttest_f <- t.test(critere_bien_etre_global ~ place, data = full_data_f) |> 
  broom::tidy() |> 
  mutate(
    SEXE = "Femme"
  ) |> 
  select(SEXE, estimate, p.value)

ttest_f <- ttest_h |> bind_rows(ttest_f)

datanat_crit_bien_etreglobal <- datanat |> 
  group_by(SEXE) |>
  summarise(
    critere_bien_etre_global_national = round(mean(critere_bien_etre_global), 2),
  )

dataset |> 
  group_by(SEXE) |> 
  summarise(
    critere_bien_etre_global = round(mean(critere_bien_etre_global), 2),
  ) |> 
  left_join(
   ttest_f,
   by = "SEXE"
  ) |> 
  left_join(
    datanat_crit_bien_etreglobal,
    by = "SEXE"
  ) |> 
  mutate(
    critere_bien_etre_global = case_when(
      `p.value` < 0.05 & estimate < 0 ~ glue::glue("{critere_bien_etre_global} ({critere_bien_etre_global_national})"),
      `p.value` < 0.05 & estimate > 0 ~ glue::glue("{critere_bien_etre_global} ({critere_bien_etre_global_national})"),
      TRUE ~ glue::glue("{critere_bien_etre_global}")
    )
  ) |> 
  select(SEXE, critere_bien_etre_global) |> 
  DT::datatable(
    options = list(
      paging = FALSE,
      searching = FALSE,
      ordering = FALSE
    )
  )
```

### Analyses de la nature comme condition nécessaire au bien-être

Dans les analyses suivantes, nous étudions dans quelle mesure la perception de nature est nécessaire pour atteindre des niveaux moyens ou élevés de bien-être. Nous vous présentons ici les résultats les plus intéressants pour les résidents de votre ville.

```{r}
#Remplacer par du texte? 
# nca_analysis(dataset, 
#              c("critere_type_nature_global","critere_exposition_nature_global"),
#              "critere_bien_etre_global", 
#              test.rep=1000, test.p_confidence=0.9, test.p_threshold=0.05)
# nca_output(nca_analysis(dataset, 
#              c("critere_type_nature_global","critere_exposition_nature_global"),
#              "critere_bien_etre_global", 
#              test.rep=1000, test.p_confidence=0.9, test.p_threshold=0.05), summaries=TRUE, test=FALSE)
```

## Données cartographiques de `r city`

Ceci est un rapport d'analyse concernant le bien-être.

Choisir l'indicateur à visualiser dans la carte :

```{r}
#| layout-nrow: 1
#| output: asis

shiny::tags$div(
  id = "treeselect-container"
)

div(
  class = "form-check form-switch",
  shiny::tags$input(
    class = "form-check-input",
    type = "checkbox",
    id = "hidemapinfos",
    onchange="changeOpacity()"
  ),
  shiny::tags$label(
    class = "form-check-label",
    `for` = "hidemapinfos",
    "Cacher les infos en dessous des couleurs"
  )
)
```

::: {.panel-tabset .nav-tabs}

<!-- Tous les titres de niveau 2 deviennent un nouvel onglet dans ce layout  -->

## Cartographie générale

Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris fermentum egestas sapien, eget commodo leo finibus vel. Curabitur nibh turpis, suscipit quis vestibulum vitae, suscipit vel ex. Proin consectetur finibus felis id semper.

```{r}
#| column: screen-inset

div(
  id = "map",
  class = "mt-3",
  style = "height: 85vh;"
)
```

## Analysis

Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris fermentum egestas sapien, eget commodo leo finibus vel. Curabitur nibh turpis, suscipit quis vestibulum vitae, suscipit vel ex. Proin consectetur finibus felis id semper.

```{r}
#| column: screen-inset

# div(
#   id = "map2",
#   class = "mt-3",
#   style = "height: 85vh;"
# )
```

## Nouvel onglet

Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris fermentum egestas sapien, eget commodo leo finibus vel. Curabitur nibh turpis, suscipit quis vestibulum vitae, suscipit vel ex. Proin consectetur finibus felis id semper.

```{r}
#| column: screen-inset

# div(
#   id = "map3",
#   class = "mt-3",
#   style = "height: 85vh;"
# )
```
::::



## Conclusion

Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris fermentum egestas sapien, eget commodo leo finibus vel. Curabitur nibh turpis, suscipit quis vestibulum vitae, suscipit vel ex. Proin consectetur finibus felis id semper.
